<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  	<groupId>com.solocal</groupId>
	<artifactId>BoostDigital.Framework</artifactId>
	<packaging>pom</packaging>
	<version>0.0.1-SNAPSHOT</version>

	<!-- Properties definition -->
	<properties>
        <!-- Squash-TA framework version used by the project -->
		<ta.framework.version>1.12.0-RELEASE</ta.framework.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
	            <!-- <suiteXmlFiles>
						<suiteXmlFile>src/test/java/AllTest.xml</suiteXmlFile>
					    </suiteXmlFiles> -->					   
                            <includes>
                                <include>**/CucumberRunnerTest.java</include>
                            </includes>                        
				</configuration>
			</plugin>
			
		     <plugin>
		       <groupId>org.apache.maven.plugins</groupId>
		       <artifactId>maven-compiler-plugin</artifactId>
		       <version>3.6.1</version>
		       <configuration>
		         <source>1.8</source>
		         <target>1.8</target>
		       </configuration>
		     </plugin>
	
            <!-- Configuration of the Squash TA framework used by the project -->
			<plugin>
				<groupId>org.squashtest.ta</groupId>
				<artifactId>squash-ta-maven-plugin</artifactId>
				<version>${ta.framework.version}</version>
				
				<!-- Here you can add libraries to the engine classpath, using the <dependencies></dependencies> tag -->
                <!-- A sample with the mySql jdbc driver -->
				<!-- <dependencies> -->
                <!--     <dependency> -->
                <!--        <groupId>mysql</groupId> -->
                <!--        <artifactId>mysql-connector-java</artifactId> -->
                <!--        <version>5.1.19</version> -->
                <!--     </dependency> -->
				<!-- </dependencies> -->
				
				<!-- Under here is the Squash TA framework default configuration -->
				<configuration>
                    
                    <!-- 
                        Uncomment the line below in order to the build finish in success even if a test failed 
                        (functional (assertion) failure), but fail the build if an ERROR (technical failure) occurred.
                    -->
                    <!-- <mojoSuccessThreshold>FAIL</mojoSuccessThreshold> -->
					
                    <!-- Define a log configuration file (at log4j format) to override the one defined internally -->
                    <!-- If the given file can't be found the engine switch to the internal configuration-->
                    <logConfiguration>${logConfFile}</logConfiguration>
					
                    <!-- Define exporters -->
                    <exporters>
                        <surefire>
                            <jenkinsAttachmentMode>${ta.jenkins.attachment.mode}</jenkinsAttachmentMode>
                        </surefire>
                        <html/>
					</exporters>
					
                    <!-- Define configurers -->
                    <configurers>
                        <tmCallBack>
                            <endpointURL>${status.update.events.url}</endpointURL>
                            <executionExternalId>${squash.ta.external.id}</executionExternalId>
                            <jobName>${jobname}</jobName>
                            <hostName>${hostname}</hostName>
                            <endpointLoginConfFile>${squash.ta.conf.file}</endpointLoginConfFile>
                            <reportBaseUrl>${ta.tmcallback.reportbaseurl}</reportBaseUrl>
                            <jobExecutionId>${ta.tmcallback.jobexecutionid}</jobExecutionId>
                            <reportName>${ta.tmcallback.reportname}</reportName>
                        </tmCallBack>
					</configurers>
				</configuration>
				
                <!-- Bind the Squash TA "run" goal to the maven integration-test phase and reuse the default configuration -->
				<executions>
					<execution>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
    <!-- Squash TA maven repository -->
	<repositories>
		<repository>
			<id>org.squashtest.ta.release</id>
			<name>squashtest test automation - releases</name>
			<url>http://repo.squashtest.org/maven2/releases</url>
		</repository>
	</repositories>

    <!-- Squash TA maven plugin repository -->
	<pluginRepositories>
		<pluginRepository>
			<id>org.squashtest.plugins.release</id>
			<name>squashtest.org</name>
			<url>http://repo.squashtest.org/maven2/releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>
  
  
  
  

    <url>http://maven.apache.org</url>

  <!-- <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties> -->

  <dependencies>
	
	<!-- Selenium Webdriver -->
	<dependency>
		<groupId>org.seleniumhq.selenium</groupId>
		<artifactId>selenium-java</artifactId>
		<version>3.4.0</version>
	</dependency>
	
	<dependency>
		<groupId>org.seleniumhq.selenium</groupId>
		<artifactId>selenium-server</artifactId>
		<version>3.4.0</version>
	</dependency>
	
	<!-- Appium -->
	<dependency>
	    <groupId>io.appium</groupId>
	    <artifactId>java-client</artifactId>
	    <version>4.1.2</version>
	</dependency>
	
	<dependency>
	    <groupId>com.google.guava</groupId>
	    <artifactId>guava</artifactId>
	    <version>21.0</version>
	</dependency>
	
	<!-- TestNG -->
	<dependency>
		<groupId>org.testng</groupId>
		<artifactId>testng</artifactId>
		<version>6.10</version>
	</dependency>
	
	<!-- junit -->
	<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit-dep</artifactId>
	    <version>4.11</version>
	</dependency>
	
	<!-- Cucumber Dependencies -->
	<dependency>
		<groupId>info.cukes</groupId>
		<artifactId>cucumber-java</artifactId>
		<version>1.2.2</version>
	</dependency>
	
	<dependency>
		<groupId>info.cukes</groupId>
		<artifactId>cucumber-testng</artifactId>
		<version>1.2.4</version>
	</dependency>
	
	<dependency>
        <groupId>info.cukes</groupId>
        <artifactId>cucumber-junit</artifactId>
        <version>1.2.4</version>
    </dependency>
       
	<dependency>
		<groupId>info.cukes</groupId>
		<artifactId>cucumber-core</artifactId>
		<version>1.2.4</version>
	</dependency>
	
	<dependency>
		<groupId>info.cukes</groupId>
		<artifactId>gherkin</artifactId>
		<version>2.12.2</version>
	</dependency>
	

	<!-- Hamcrest is a library of matchers, which can be combined in to create flexible expressions of intent in tests -->
	<dependency>
		<groupId>org.hamcrest</groupId>
		<artifactId>hamcrest-all</artifactId>
		<version>1.3</version>
	</dependency>
	
    <!-- Date Time support -->
    <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>2.5</version>
    </dependency>
	
	<!-- Tools to assist in the reading of configuration/preferences files in various formats. -->
	<dependency>
		<groupId>commons-configuration</groupId>
		<artifactId>commons-configuration</artifactId>
		<version>1.3</version>
	</dependency>
	
	<dependency>
		<groupId>commons-collections</groupId>
		<artifactId>commons-collections</artifactId>
		<version>3.2.1</version>
	</dependency>
	
	<!-- Apache POI - Java API To Access Microsoft Format Files -->
	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi</artifactId>
		<version>3.15</version>
	</dependency>
	
	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi-ooxml</artifactId>
		<version>3.15</version>
	</dependency>
		
	<!-- Cucumber Extent Reports -->
	<dependency>
	    <groupId>com.vimalselvam</groupId>
	    <artifactId>cucumber-extentsreport</artifactId>
	    <version>2.0.4</version>
	</dependency>
	
	<dependency>
	    <groupId>com.aventstack</groupId>
	    <artifactId>extentreports</artifactId>
	    <version>3.0.3</version>
	</dependency>
	
	<!-- Cucumber Reports Plugin -->
	<dependency>
		<groupId>com.github.mkolisnyk</groupId>
		<artifactId>cucumber-reports</artifactId>
		<version>1.0.7</version>
	</dependency>
	
  </dependencies>

</project>
